<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
 게시판 테이블
CREATE TABLE `board` (
  `board_seq` INT(11) NOT NULL AUTO_INCREMENT COMMENT '게시판 시퀀스',
  `board_kind` ENUM('COMMUNITY','BOAST','SAMPLE1') COMMENT '게시판 종류',
  `board_no` INT(10) NULL COMMENT '게시판 번호',
  `board_title` VARCHAR(250) DEFAULT NULL COMMENT '게시판 제목',
  `board_content` LONGTEXT COMMENT '게시판 내용',
  `board_writer` VARCHAR(50) DEFAULT NULL COMMENT '게시판 작성자',
  `board_img_url` VARCHAR(100) DEFAULT NULL COMMENT '게시판 이미지 파일 경로',
  `board_img_origin_nm` VARCHAR(100) DEFAULT NULL COMMENT '게시판 이미지 원본 파일이름',
  `board_img_destination_nm` VARCHAR(100) DEFAULT NULL COMMENT '게시판 이미지 변환 파일이름',
  `reply_content` VARCHAR(500) DEFAULT NULL COMMENT '댓글 내용',
  `reply_sort` INT(10) DEFAULT 0 COMMENT '댓글 정렬 번호',
  `reply_depth` INT(10) DEFAULT 0 COMMENT '댓글 깊이',
  `reg_date` DATETIME DEFAULT NULL COMMENT '게시판 등록일',
  `chg_date` DATETIME DEFAULT NULL COMMENT '게시판 수정일',
  PRIMARY KEY (`board_seq`)
) COMMENT '게시판'
;

DROP TABLE board;

SELECT * FROM board
ORDER BY board_no DESC, reply_sort ASC
;

DELETE FROM board;
-->

<mapper namespace="kr.co.api.manager.db.board.mapper.BoardMapper">

    <select id="selectBoard" resultType="kr.co.api.manager.db.board.model.DataModel">
        SELECT
              board_no
              , board_kind
              , board_title
              , board_content
              , board_writer
            --  , reply_no
              , reply_content
              , reply_sort
              , reply_depth
              , reg_date
              , chg_date
              , board_img_url
              , board_img_origin_nm
              , board_img_destination_nm
        FROM board
        WHERE 1 = 1
        ORDER BY board_no DESC, reply_sort ASC
        LIMIT 10
    </select>

    <insert id="insertBoard" parameterType="kr.co.api.manager.db.board.model.BoardModel">
        INSERT INTO board (board_kind, board_no, board_title, board_content, board_writer, reg_date, chg_date , board_img_url, board_img_origin_nm, board_img_destination_nm)
        VALUES (
                #{boardKind}
                , (SELECT IFNULL(MAX(b.board_no)+1, 0) FROM board b WHERE b.board_kind = #{boardKind})
                , #{boardTitle}
                , #{boardContent}
                , #{boardWriter}
                , NOW()
                , NOW()
                , #{boardImgUrl}
                , #{boardImgOriginNm}
                , #{boardImgDestinationNm}
                )
    </insert>

    <!--
    댓글의 댓글이면 댓글의 현재 깊이 값을 넘겨야함 그래야 +1함
    -->
    <insert id="insertReply" parameterType="kr.co.api.manager.db.board.model.ReplyModel">
        INSERT INTO board (board_kind, board_no, reply_content, reply_sort, reply_depth, reg_date, chg_date)
        VALUES (
                #{boardKind}
                , #{boardNo}
                , #{replyContent}
                , #{replySort}
                , #{replyDepth}
                , NOW()
                , NOW()
                )
    </insert>

    <insert id="updateTest" parameterType="kr.co.api.manager.db.test.model.Test">
        UPDATE test
        SET
            text = #{text}
        WHERE id = #{id}
    </insert>

    <delete id="deleteTest">
        DELETE FROM test WHERE id = #{id}
    </delete>

    <insert id="insertProduct" parameterType="kr.co.api.manager.db.board.model.ProductModel">
        INSERT INTO flio.product(
                    product_name
                    , title
                    , content
                    , status
                    , sale_yn
                    , classification
                    , tag
                    , base_url
                    , image_url
                    , display_yn
                    , use_date
                    , purchase_kind
                    , purchase_price
                    , box_yn
                    , brand
                    , purpose
                    , model_no
                    , serial_no
                    , repair_yn
                    , product_related_url
                    , uid
                    , reg_date
        )
        VALUES(
                #{productName}, #{title}, #{content}, #{status}, 'S', #{classification}, #{tag}, #{baseUrl}, #{imageUrl}
                , 'Y', #{useDate}, #{purchaseKind}, #{purchasePrice}, #{boxYn}, #{brand}, #{purpose}, #{modelNo}
                , #{serialNo}, #{repairYn}, #{productRelatedUrl}, #{uid}, CURRENT_TIMESTAMP);

    </insert>

    <select id="selectProduct" resultType="kr.co.api.manager.db.board.model.ProductModel">
        SELECT
              product_name
            , title
            , content
            , status
            , sale_yn
            , classification
            , tag
            , base_url
            , image_url
            , display_yn
            , use_date
            , purchase_kind
            , purchase_price
            , box_yn
            , brand
            , purpose
            , model_no
            , serial_no
            , repair_yn
            , product_related_url
            , uid
            , reg_date
        FROM flio.product
        WHERE 1 = 1
            AND display_yn = 'Y'
    </select>
</mapper>